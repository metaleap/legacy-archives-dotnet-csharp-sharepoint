//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace roxority_UploadZen.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("roxority_UploadZen.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UploadActions.
        /// </summary>
        internal static string @__MenuActionDefaultSchema {
            get {
                return ResourceManager.GetString("__MenuActionDefaultSchema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /_layouts/images/roxority_UploadZen/uplicon.png.
        /// </summary>
        internal static string @__MenuActionIcon {
            get {
                return ResourceManager.GetString("__MenuActionIcon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /_layouts/images/roxority_UploadZen/upload.png.
        /// </summary>
        internal static string @__MenuActionIconSmall {
            get {
                return ResourceManager.GetString("__MenuActionIconSmall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to setup,itemref_UploadActions,clickonce_deployment_checklist,windows_integrated_and_forms_based_authentication_fba,farm_site_config.
        /// </summary>
        internal static string _AdminHelpTopics {
            get {
                return ResourceManager.GetString("_AdminHelpTopics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copyright &amp;copy; 2008-2013 ROXORITY Ltd. All rights reserved..
        /// </summary>
        internal static string _Copyright {
            get {
                return ResourceManager.GetString("_Copyright", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lite,Basic,Ultimate.
        /// </summary>
        internal static string _Editions {
            get {
                return ResourceManager.GetString("_Editions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1.
        /// </summary>
        internal static string _hasjquery {
            get {
                return ResourceManager.GetString("_hasjquery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to intro,setup,clickonce_deployment_checklist,sharepoint_flash_silverlight_web_uploader,uploading_multiple_files,comparison_web_windows_sharepoint_bulk_upload,itemref_UploadActions,farm_site_config,automatic_checkout_batch_checkin_versioning,windows_integrated_and_forms_based_authentication_fba,bulk_folder_uploads_server_side_zip_unzipping,client_side_settings,release_notes,eula.
        /// </summary>
        internal static string _HelpTopics {
            get {
                return ResourceManager.GetString("_HelpTopics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to intro,setup,clickonce_deployment_checklist,sharepoint_flash_silverlight_web_uploader,itemref_UploadActions,automatic_checkout_batch_checkin_versioning.
        /// </summary>
        internal static string _HomeHelpTopics {
            get {
                return ResourceManager.GetString("_HomeHelpTopics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /_layouts/images/menuuploadmultiple.gif.
        /// </summary>
        internal static string _LogoImageUrl {
            get {
                return ResourceManager.GetString("_LogoImageUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collation.
        /// </summary>
        internal static string _MappingKey {
            get {
                return ResourceManager.GetString("_MappingKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ;MenuPerms:[*AddAndCustomizePages|AddDelPrivateWebParts|AddListItems|ApplyStyleSheets|ApplyThemeAndBorder|ApproveItems|BrowseDirectories|BrowseUserInfo|CancelCheckout|CreateAlerts|CreateGroups|CreateSSCSite|DeleteListItems|DeleteVersions|EditListItems|EditMyUserInfo|EmptyMask|EnumeratePermissions|FullMask|ManageAlerts|ManageLists|ManagePermissions|ManagePersonalViews|ManageSubwebs|ManageWeb|Open|OpenItems|UpdatePersonalWebParts|UseClientIntegration|UseRemoteAPIs|ViewFormPages|ViewListItems|ViewPages|ViewUsa [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string _MenuPerms {
            get {
                return ResourceManager.GetString("_MenuPerms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 6, 2, 0, 0, 0, 164, 0, 0, 82, 83, 65, 49, 0, 4, 0, 0, 1, 0, 1, 0, 161, 233, 120, 128, 228, 82, 89, 25, 218, 58, 250, 238, 152, 227, 130, 105, 151, 42, 234, 134, 14, 34, 236, 101, 209, 237, 21, 126, 243, 214, 137, 124, 122, 166, 55, 171, 230, 73, 156, 5, 110, 57, 128, 61, 142, 82, 157, 171, 17, 168, 115, 123, 112, 182, 152, 210, 115, 66, 189, 78, 149, 105, 118, 201, 24, 145, 243, 65, 166, 80, 197, 144, 92, 118, 253, 221, 20, 88, 83, 224, 126, 113, 43, 45, 118, 24, 101, 236, 158, 192, 217, 222, 170, 222, 244, [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string _ProductID {
            get {
                return ResourceManager.GetString("_ProductID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to roxority_UploadZen.
        /// </summary>
        internal static string _ProductName {
            get {
                return ResourceManager.GetString("_ProductName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UploadZen.
        /// </summary>
        internal static string _ProductTitle {
            get {
                return ResourceManager.GetString("_ProductTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ux:HideAction|Html:FileFilters|Win:HideNote|Misc:ErrorDetails.
        /// </summary>
        internal static string _SettingGroups {
            get {
                return ResourceManager.GetString("_SettingGroups", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HideAction:[never|auto|always];HideLink:[never|auto|always];MenuPerms:[*AddAndCustomizePages|AddDelPrivateWebParts|AddListItems|ApplyStyleSheets|ApplyThemeAndBorder|ApproveItems|BrowseDirectories|BrowseUserInfo|CancelCheckout|CreateAlerts|CreateGroups|CreateSSCSite|DeleteListItems|DeleteVersions|EditListItems|EditMyUserInfo|EmptyMask|EnumeratePermissions|FullMask|ManageAlerts|ManageLists|ManagePermissions|ManagePersonalViews|ManageSubwebs|ManageWeb|Open|OpenItems|UpdatePersonalWebParts|UseClientIntegration| [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string _Settings {
            get {
                return ResourceManager.GetString("_Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tool_UploadActions,Tool_SiteUsers,Tool_Localizer,Tool_Transfer.
        /// </summary>
        internal static string _Tools {
            get {
                return ResourceManager.GetString("_Tools", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tool_UploadActions_DefTitle,Tool_ItemEditor_NewDesc,Tool_ItemEditor_NewName,Tool_ItemEditor_DefaultDesc,NoFilesUploaded,NoTargetFolder,Uploader_AddFiles,Uploader_AddFilesDrop,Uploader_BlockInfo,Uploader_Cancel,Uploader_CheckIn,Uploader_CheckIn0,Uploader_CheckIn1,Uploader_CheckIn2,Uploader_CheckIn3,Uploader_File,Uploader_FlashWarn,Uploader_Help,Uploader_Messages,Uploader_NoFiles,Uploader_NoteBlocked1,Uploader_NoteBlocked2,Uploader_NoteCheckout,Uploader_NoteFilters,Uploader_NoteMaxSize,Uploader_NoteOverwrite, [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string _UiResources {
            get {
                return ResourceManager.GetString("_UiResources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to roxority_.
        /// </summary>
        internal static string _WhiteLabel {
            get {
                return ResourceManager.GetString("_WhiteLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string _WhiteLabelAddress {
            get {
                return ResourceManager.GetString("_WhiteLabelAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to support@roxority.com.
        /// </summary>
        internal static string _WhiteLabelEmail {
            get {
                return ResourceManager.GetString("_WhiteLabelEmail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ROXORITY Ltd..
        /// </summary>
        internal static string _WhiteLabelTitle {
            get {
                return ResourceManager.GetString("_WhiteLabelTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to http://roxority.com/.
        /// </summary>
        internal static string _WhiteLabelUrl {
            get {
                return ResourceManager.GetString("_WhiteLabelUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to contact#down.
        /// </summary>
        internal static string _WhiteLabelUrlContact {
            get {
                return ResourceManager.GetString("_WhiteLabelUrlContact", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SiteFeature:b2748471-7f09-4c99-9c5b-c208404e85f4;SiteFeature:b2748471-7f09-4c99-9c5b-c208404e85f5.
        /// </summary>
        internal static string _WssItems {
            get {
                return ResourceManager.GetString("_WssItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Always include all debugging and diagnostic details in error messages.
        /// </summary>
        internal static string CfgSettingCaption_ErrorDetails {
            get {
                return ResourceManager.GetString("CfgSettingCaption_ErrorDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hide Check-In drop-downs if disabled.
        /// </summary>
        internal static string CfgSettingCaption_HideNoCheckIn {
            get {
                return ResourceManager.GetString("CfgSettingCaption_HideNoCheckIn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Have you reviewed and fully implemented the ClickOnce Deployment Checklist?.
        /// </summary>
        internal static string CfgSettingCaption_HideNote {
            get {
                return ResourceManager.GetString("CfgSettingCaption_HideNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Always (requires activated Site Collection feature).
        /// </summary>
        internal static string CfgSettingChoice_HideAction_always {
            get {
                return ResourceManager.GetString("CfgSettingChoice_HideAction_always", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only if Upload Actions exist (requires activated Site Collection feature).
        /// </summary>
        internal static string CfgSettingChoice_HideAction_auto {
            get {
                return ResourceManager.GetString("CfgSettingChoice_HideAction_auto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Never.
        /// </summary>
        internal static string CfgSettingChoice_HideAction_never {
            get {
                return ResourceManager.GetString("CfgSettingChoice_HideAction_never", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Always (requires activated Site Collection feature).
        /// </summary>
        internal static string CfgSettingChoice_HideLink_always {
            get {
                return ResourceManager.GetString("CfgSettingChoice_HideLink_always", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only if Upload Actions exist (requires activated Site Collection feature).
        /// </summary>
        internal static string CfgSettingChoice_HideLink_auto {
            get {
                return ResourceManager.GetString("CfgSettingChoice_HideLink_auto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Never.
        /// </summary>
        internal static string CfgSettingChoice_HideLink_never {
            get {
                return ResourceManager.GetString("CfgSettingChoice_HideLink_never", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Documents (*.pdf; *.doc; *.rtf etc.):123,602,cgm,csv,dbf,dif,doc,docx,docm,dot,dotx,hta,htm,html,hwp,mml,odb,odf,odm,odp,ods,odt,oth,otp,ott,pdb,pdf,pot,potm,potx,pps,ppt,pptm,pptx,psw,pxl,rtf,sdc,sdp,sdw,sgl,slk,smf,stc,sti,stw,sxc,sxg,sxm,sxi,sxw,txt,uof,uos,uof,uop,uot,vor,wb2,wpd,wk1,wks,wri,xlc,xlm,xltm,xltx,xls,xlsb,xlsm,xlsx,xlt,xlw,xml
        ///Pictures (*.jpg; *.png; *.gif etc.):bmp,dxf,dib,emf,eps,gif,ico,jfif,jif,jpe,jpeg,jpg,met,odg,otg,pbm,pcd,pct,pcx,pgm,pict,png,ppm,psd,ras,sda,sdd,sgf,sgv,std,svm,sv [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CfgSettingDef_FileFilters {
            get {
                return ResourceManager.GetString("CfgSettingDef_FileFilters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AddListItems.
        /// </summary>
        internal static string CfgSettingDef_MenuPerms {
            get {
                return ResourceManager.GetString("CfgSettingDef_MenuPerms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 0.
        /// </summary>
        internal static string CfgSettingDef_UploadDelay {
            get {
                return ResourceManager.GetString("CfgSettingDef_UploadDelay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setting an alternative path is imperative if you want to use the Chunking feature in a multi-server farm environment. In a single-server farm environment or if Chunking is not used, this setting can be ignored. First read the details in the &lt;b&gt;Preparing a Web Application for the Chunking feature&lt;/b&gt; section of the UploadZen &lt;b&gt;Deployment Checklist&lt;/b&gt; help topic.&lt;br/&gt;&lt;br/&gt;If blank, this setting defaults to the current web server&apos;s physical path corresponding to the _layouts/roxority_UploadZen/fc virtual dir [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CfgSettingDesc_ChunkPath {
            get {
                return ResourceManager.GetString("CfgSettingDesc_ChunkPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to By default, for certain UploadZen-handled errors only the error message is shown to end users. For debugging and diagnostic purposes, it can occasionally and temporarily be useful to include all known error details such as inner exceptions or the stack trace, but in production this would likely confuse or scare your end users. Tick this check box to always include all error details in your end user interfaces..
        /// </summary>
        internal static string CfgSettingDesc_ErrorDetails {
            get {
                return ResourceManager.GetString("CfgSettingDesc_ErrorDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can restrict the file types users can upload in your Upload Action under Site Settings / UploadZen Studio / Upload Actions. If you choose to enable file type filtering, the Upload Action will let you select from the file name extension filter sets defined here. Every filter set is specified in a separate line and contains its name (do not use a comma anywhere in that first part), then a colon [:] and then all allowed file name extensions (without dots), comma-combined..
        /// </summary>
        internal static string CfgSettingDesc_FileFilters {
            get {
                return ResourceManager.GetString("CfgSettingDesc_FileFilters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to By default, your UploadZen action commands co-exist together with the built-in, out-of-box &quot;Upload Multiple Documents&quot; command. If you intend to fully replace that functionality with UploadZen, you can set whether and when to disable the built-in, out-of-box &quot;Upload Multiple Documents&quot; command (affects both both the SharePoint 2007 Library &quot;Upload&quot; tool-bar menu and the ribbon menu in the SharePoint 2010/2013 &quot;Documents / New&quot; section of the Library Tools ribbon tab)..
        /// </summary>
        internal static string CfgSettingDesc_HideAction {
            get {
                return ResourceManager.GetString("CfgSettingDesc_HideAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to By default, your UploadZen action commands co-exist together with the built-in, out-of-box &quot;Upload Multiple Files&quot; link shown on the &lt;b&gt;UploadZen Upload.aspx Replacement Page&lt;/b&gt; (if the corresponding Site Collection feature is activated). If you intend to fully replace the built-in functionality with UploadZen, you can set whether and when to show the built-in, out-of-box &quot;Upload Multiple Files&quot; link on the single-upload page..
        /// </summary>
        internal static string CfgSettingDesc_HideLink {
            get {
                return ResourceManager.GetString("CfgSettingDesc_HideLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tick this check box after having read the &lt;a href=&quot;?doc=clickonce_deployment_checklist&quot;&gt;ClickOnce Deployment Checklist&lt;/a&gt; documentation topic fully and having taken all administrative actions described that are &lt;i&gt;required&lt;/i&gt; for UploadZen Windows Uploader to run correctly for all users. (This will hide the reminder notice in the UploadZen window the next time a user launches the UploadZen Windows Uploader from a reloaded page.).
        /// </summary>
        internal static string CfgSettingDesc_HideNote {
            get {
                return ResourceManager.GetString("CfgSettingDesc_HideNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Under rare circumstances, you may have to integrate with 3rd-party or custom Event Handlers that work better when there is a slight delay between Document Library events. Specify the number of seconds UploadZen should artificially delay each upload. If you don&apos;t specify an integer number, than the recommended default value of 0 will be used..
        /// </summary>
        internal static string CfgSettingDesc_UploadDelay {
            get {
                return ResourceManager.GetString("CfgSettingDesc_UploadDelay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Web Uploader.
        /// </summary>
        internal static string CfgSettingGroup_Html {
            get {
                return ResourceManager.GetString("CfgSettingGroup_Html", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Miscellaneous Settings.
        /// </summary>
        internal static string CfgSettingGroup_Misc {
            get {
                return ResourceManager.GetString("CfgSettingGroup_Misc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SharePoint Integration.
        /// </summary>
        internal static string CfgSettingGroup_Ux {
            get {
                return ResourceManager.GetString("CfgSettingGroup_Ux", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Uploader.
        /// </summary>
        internal static string CfgSettingGroup_Win {
            get {
                return ResourceManager.GetString("CfgSettingGroup_Win", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alternative path for temporary file chunk storage location.
        /// </summary>
        internal static string CfgSettingTitle_ChunkPath {
            get {
                return ResourceManager.GetString("CfgSettingTitle_ChunkPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Always include all debugging and diagnostic details in error messages.
        /// </summary>
        internal static string CfgSettingTitle_ErrorDetails {
            get {
                return ResourceManager.GetString("CfgSettingTitle_ErrorDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File name extension filter sets.
        /// </summary>
        internal static string CfgSettingTitle_FileFilters {
            get {
                return ResourceManager.GetString("CfgSettingTitle_FileFilters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable SharePoint&apos;s out-of-box &quot;Upload Multiple Documents&quot; menu item.
        /// </summary>
        internal static string CfgSettingTitle_HideAction {
            get {
                return ResourceManager.GetString("CfgSettingTitle_HideAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hide SharePoint&apos;s out-of-box &quot;Upload Multiple Files&quot; link on the single-upload page.
        /// </summary>
        internal static string CfgSettingTitle_HideLink {
            get {
                return ResourceManager.GetString("CfgSettingTitle_HideLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hide Check-In drop-downs if disabled.
        /// </summary>
        internal static string CfgSettingTitle_HideNoCheckIn {
            get {
                return ResourceManager.GetString("CfgSettingTitle_HideNoCheckIn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All administrative actions described in the Deployment Checklist have been taken.
        /// </summary>
        internal static string CfgSettingTitle_HideNote {
            get {
                return ResourceManager.GetString("CfgSettingTitle_HideNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Per-File Delay in Seconds.
        /// </summary>
        internal static string CfgSettingTitle_UploadDelay {
            get {
                return ResourceManager.GetString("CfgSettingTitle_UploadDelay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatic Check-Out &amp; Batch Check-In.
        /// </summary>
        internal static string HelpTopic_automatic_checkout_batch_checkin_versioning {
            get {
                return ResourceManager.GetString("HelpTopic_automatic_checkout_batch_checkin_versioning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bulk Folder Uploads &amp; ZIP Handling.
        /// </summary>
        internal static string HelpTopic_bulk_folder_uploads_server_side_zip_unzipping {
            get {
                return ResourceManager.GetString("HelpTopic_bulk_folder_uploads_server_side_zip_unzipping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deployment Checklist.
        /// </summary>
        internal static string HelpTopic_clickonce_deployment_checklist {
            get {
                return ResourceManager.GetString("HelpTopic_clickonce_deployment_checklist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Client-Side Settings.
        /// </summary>
        internal static string HelpTopic_client_side_settings {
            get {
                return ResourceManager.GetString("HelpTopic_client_side_settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Web vs. Windows Uploader.
        /// </summary>
        internal static string HelpTopic_comparison_web_windows_sharepoint_bulk_upload {
            get {
                return ResourceManager.GetString("HelpTopic_comparison_web_windows_sharepoint_bulk_upload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to End-User License Agreement (EULA).
        /// </summary>
        internal static string HelpTopic_eula {
            get {
                return ResourceManager.GetString("HelpTopic_eula", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration Settings.
        /// </summary>
        internal static string HelpTopic_farm_site_config {
            get {
                return ResourceManager.GetString("HelpTopic_farm_site_config", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Introduction.
        /// </summary>
        internal static string HelpTopic_intro {
            get {
                return ResourceManager.GetString("HelpTopic_intro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings for Upload Actions.
        /// </summary>
        internal static string HelpTopic_itemref_UploadActions {
            get {
                return ResourceManager.GetString("HelpTopic_itemref_UploadActions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Release Notes.
        /// </summary>
        internal static string HelpTopic_release_notes {
            get {
                return ResourceManager.GetString("HelpTopic_release_notes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Solution Installation.
        /// </summary>
        internal static string HelpTopic_setup {
            get {
                return ResourceManager.GetString("HelpTopic_setup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Walkthrough: Web Uploader.
        /// </summary>
        internal static string HelpTopic_sharepoint_flash_silverlight_web_uploader {
            get {
                return ResourceManager.GetString("HelpTopic_sharepoint_flash_silverlight_web_uploader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Walkthrough: Windows Uploader.
        /// </summary>
        internal static string HelpTopic_uploading_multiple_files {
            get {
                return ResourceManager.GetString("HelpTopic_uploading_multiple_files", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Authentication (Windows &amp; Forms).
        /// </summary>
        internal static string HelpTopic_windows_integrated_and_forms_based_authentication_fba {
            get {
                return ResourceManager.GetString("HelpTopic_windows_integrated_and_forms_based_authentication_fba", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatic check-ins and check-outs require a ROXORITY UploadZen Basic Edition product license..
        /// </summary>
        internal static string LicCheckInOut {
            get {
                return ResourceManager.GetString("LicCheckInOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This authentication method requires a ROXORITY UploadZen Ultimate Edition product license..
        /// </summary>
        internal static string LicForms {
            get {
                return ResourceManager.GetString("LicForms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For more details, click the &apos;Help&apos; link at the bottom right of this Window, then on the Help topic page scroll up and click the &apos;Management&apos; tab, then click the &apos;License&apos; link on the right..
        /// </summary>
        internal static string LicHelp {
            get {
                return ResourceManager.GetString("LicHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sending bulk-uploaded document meta-data values requires a ROXORITY UploadZen Ultimate Edition product license..
        /// </summary>
        internal static string LicMetaData {
            get {
                return ResourceManager.GetString("LicMetaData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Notify the administrator responsible for this SharePoint server about this problem..
        /// </summary>
        internal static string LicNoHelp {
            get {
                return ResourceManager.GetString("LicNoHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All evaluation licenses for this product, including the Micro license, permit a maximum of {0} individual file uploads and {1} bulk folder uploads per client IP address between server resets..
        /// </summary>
        internal static string LicTrial {
            get {
                return ResourceManager.GetString("LicTrial", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server-side unzipping of uploaded ZIP archive files and folder bulk uploads require a ROXORITY UploadZen Ultimate Edition product license..
        /// </summary>
        internal static string LicUnzip {
            get {
                return ResourceManager.GetString("LicUnzip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No files were uploaded from your computer. This usually indicates an issue with your current UploadZen configuration..
        /// </summary>
        internal static string NoFilesUploaded {
            get {
                return ResourceManager.GetString("NoFilesUploaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No target Library / folder to upload to. Specify one in this Web Part&apos;s settings tool-pane, or via a Web Part connection, or simply add at least one Library View Web Part to this page..
        /// </summary>
        internal static string NoTargetFolder {
            get {
                return ResourceManager.GetString("NoTargetFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow users to change the target folder.
        /// </summary>
        internal static string PC_UploadActions_cf {
            get {
                return ResourceManager.GetString("PC_UploadActions_cf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow users to change the target Document Library.
        /// </summary>
        internal static string PC_UploadActions_cl {
            get {
                return ResourceManager.GetString("PC_UploadActions_cl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UploadZen menu item description.
        /// </summary>
        internal static string PC_UploadActions_desc {
            get {
                return ResourceManager.GetString("PC_UploadActions_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Client-side uploader.
        /// </summary>
        internal static string PC_UploadActions_m {
            get {
                return ResourceManager.GetString("PC_UploadActions_m", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Uploader.
        /// </summary>
        internal static string PC_UploadActions_m_c {
            get {
                return ResourceManager.GetString("PC_UploadActions_m_c", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Web Uploader.
        /// </summary>
        internal static string PC_UploadActions_m_h {
            get {
                return ResourceManager.GetString("PC_UploadActions_m_h", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If applicable, allow end users to change the above default check-in per file.
        /// </summary>
        internal static string PC_UploadActions_nca {
            get {
                return ResourceManager.GetString("PC_UploadActions_nca", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If applicable, by default automatically check in uploaded files as follows.
        /// </summary>
        internal static string PC_UploadActions_nci {
            get {
                return ResourceManager.GetString("PC_UploadActions_nci", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check in as a major new version (if versions are enabled).
        /// </summary>
        internal static string PC_UploadActions_nci_MajorCheckIn {
            get {
                return ResourceManager.GetString("PC_UploadActions_nci_MajorCheckIn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check in as a minor new version (if minor versions are enabled).
        /// </summary>
        internal static string PC_UploadActions_nci_MinorCheckIn {
            get {
                return ResourceManager.GetString("PC_UploadActions_nci_MinorCheckIn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No check-in (keep uploaded files checked out to uploading user).
        /// </summary>
        internal static string PC_UploadActions_nci_None {
            get {
                return ResourceManager.GetString("PC_UploadActions_nci_None", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check in but keep previous version number (&quot;overwrite current version&quot;).
        /// </summary>
        internal static string PC_UploadActions_nci_OverwriteCheckIn {
            get {
                return ResourceManager.GetString("PC_UploadActions_nci_OverwriteCheckIn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If applicable, automatically check out existing files (recommended).
        /// </summary>
        internal static string PC_UploadActions_nco {
            get {
                return ResourceManager.GetString("PC_UploadActions_nco", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File chunk size (read description of this setting first).
        /// </summary>
        internal static string PC_UploadActions_ncs {
            get {
                return ResourceManager.GetString("PC_UploadActions_ncs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File type filters (multi-selectable, no selection = no filters).
        /// </summary>
        internal static string PC_UploadActions_nff {
            get {
                return ResourceManager.GetString("PC_UploadActions_nff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum file size (read description of this setting first).
        /// </summary>
        internal static string PC_UploadActions_nms {
            get {
                return ResourceManager.GetString("PC_UploadActions_nms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow users to launch the Windows Uploader from the Web Uploader.
        /// </summary>
        internal static string PC_UploadActions_noc {
            get {
                return ResourceManager.GetString("PC_UploadActions_noc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overwrite existing files with the same name.
        /// </summary>
        internal static string PC_UploadActions_now {
            get {
                return ResourceManager.GetString("PC_UploadActions_now", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If HTML5 is not supported, utilize client-side browser plugins.
        /// </summary>
        internal static string PC_UploadActions_np {
            get {
                return ResourceManager.GetString("PC_UploadActions_np", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only use Flash.
        /// </summary>
        internal static string PC_UploadActions_np_f {
            get {
                return ResourceManager.GetString("PC_UploadActions_np_f", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Flash (and only if not available: use Silverlight).
        /// </summary>
        internal static string PC_UploadActions_np_fs {
            get {
                return ResourceManager.GetString("PC_UploadActions_np_fs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only use Silverlight.
        /// </summary>
        internal static string PC_UploadActions_np_s {
            get {
                return ResourceManager.GetString("PC_UploadActions_np_s", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Silverlight (and only if not available: use Flash).
        /// </summary>
        internal static string PC_UploadActions_np_sf {
            get {
                return ResourceManager.GetString("PC_UploadActions_np_sf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto-remove files marked for upload with blocked file extensions.
        /// </summary>
        internal static string PC_UploadActions_nrb {
            get {
                return ResourceManager.GetString("PC_UploadActions_nrb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replacement character.
        /// </summary>
        internal static string PC_UploadActions_nrc {
            get {
                return ResourceManager.GetString("PC_UploadActions_nrc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto-shrink images prior to upload (read description of this setting first).
        /// </summary>
        internal static string PC_UploadActions_nri {
            get {
                return ResourceManager.GetString("PC_UploadActions_nri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If supported, offer a file drop area.
        /// </summary>
        internal static string PC_UploadActions_nsd {
            get {
                return ResourceManager.GetString("PC_UploadActions_nsd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If Silverlight is used, offer client-side zipping.
        /// </summary>
        internal static string PC_UploadActions_nsz {
            get {
                return ResourceManager.GetString("PC_UploadActions_nsz", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prior to uploading, change all file names to random unique sequences.
        /// </summary>
        internal static string PC_UploadActions_nun {
            get {
                return ResourceManager.GetString("PC_UploadActions_nun", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Offer end users selectable options for server-side ZIP extraction.
        /// </summary>
        internal static string PC_UploadActions_nuz {
            get {
                return ResourceManager.GetString("PC_UploadActions_nuz", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Also show in Upload.aspx replacement page.
        /// </summary>
        internal static string PC_UploadActions_p {
            get {
                return ResourceManager.GetString("PC_UploadActions_p", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow users to store their SharePoint log-in password on their local PC.
        /// </summary>
        internal static string PC_UploadActions_rp {
            get {
                return ResourceManager.GetString("PC_UploadActions_rp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show &apos;Options&apos; tab in the Windows Uploader.
        /// </summary>
        internal static string PC_UploadActions_sc {
            get {
                return ResourceManager.GetString("PC_UploadActions_sc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show Help link in the uploader.
        /// </summary>
        internal static string PC_UploadActions_sh {
            get {
                return ResourceManager.GetString("PC_UploadActions_sh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show UploadZen menu item in the following Document Libraries.
        /// </summary>
        internal static string PC_UploadActions_show {
            get {
                return ResourceManager.GetString("PC_UploadActions_show", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show UploadZen link in the uploader.
        /// </summary>
        internal static string PC_UploadActions_sl {
            get {
                return ResourceManager.GetString("PC_UploadActions_sl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show Mini Tutorial in the uploader.
        /// </summary>
        internal static string PC_UploadActions_st {
            get {
                return ResourceManager.GetString("PC_UploadActions_st", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UploadZen menu item caption.
        /// </summary>
        internal static string PC_UploadActions_title {
            get {
                return ResourceManager.GetString("PC_UploadActions_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unzipping of uploaded ZIP archive files.
        /// </summary>
        internal static string PC_UploadActions_uz {
            get {
                return ResourceManager.GetString("PC_UploadActions_uz", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Let users decide (recommended).
        /// </summary>
        internal static string PC_UploadActions_uz_prompt {
            get {
                return ResourceManager.GetString("PC_UploadActions_uz_prompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Always unzip.
        /// </summary>
        internal static string PC_UploadActions_uz_unzip {
            get {
                return ResourceManager.GetString("PC_UploadActions_uz_unzip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Never unzip.
        /// </summary>
        internal static string PC_UploadActions_uz_zipped {
            get {
                return ResourceManager.GetString("PC_UploadActions_uz_zipped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to End users can select a different Upload Action (Web Part initially defaults to the one specified below).
        /// </summary>
        internal static string PC_UploadWebPart_AllowSelectAction {
            get {
                return ResourceManager.GetString("PC_UploadWebPart_AllowSelectAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to End users can select a different target folder for the currently selected target Library.
        /// </summary>
        internal static string PC_UploadWebPart_AllowSelectFolder {
            get {
                return ResourceManager.GetString("PC_UploadWebPart_AllowSelectFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to End users can select a different target Library from those included in the current page.
        /// </summary>
        internal static string PC_UploadWebPart_AllowSelectLibPage {
            get {
                return ResourceManager.GetString("PC_UploadWebPart_AllowSelectLibPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to End users can select a different target Library from across any Web Site in the current Site Collection.
        /// </summary>
        internal static string PC_UploadWebPart_AllowSelectLibSite {
            get {
                return ResourceManager.GetString("PC_UploadWebPart_AllowSelectLibSite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to End users can select a different target Library from the current Web Site.
        /// </summary>
        internal static string PC_UploadWebPart_AllowSelectLibWeb {
            get {
                return ResourceManager.GetString("PC_UploadWebPart_AllowSelectLibWeb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If &quot;end users can select a different target folder for the currently selected target Library&quot; (see above), optionally specify folder names to exclude (also excludes their sub-folders), ONE PER LINE: use the [...] button to open the multi-line editor..
        /// </summary>
        internal static string PC_UploadWebPart_ExcludeFolderNames {
            get {
                return ResourceManager.GetString("PC_UploadWebPart_ExcludeFolderNames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target Library / Folder: leave blank for the Web Part to initially target the current folder of the first Library View Web Part on the current page, or specify the Library ID, Library name, web-relative (ie. Pages/Folder), server-relative (/sites/site/Pages) or absolute (http://server/site/Pages) target Library or folder URL. (When connected to a provider Web Part, the value of this property is overwritten by the one supplied over the Web Part connection.).
        /// </summary>
        internal static string PC_UploadWebPart_TargetFolder {
            get {
                return ResourceManager.GetString("PC_UploadWebPart_TargetFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upload Action: leave blank for the Web Part to initially use the default Upload Action for this Site Collection, or specify the Name (not Title) of the farm-scoped or Site Collection-scoped Upload Action to use initially when the Web Part loads.
        /// </summary>
        internal static string PC_UploadWebPart_UploadAction {
            get {
                return ResourceManager.GetString("PC_UploadWebPart_UploadAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The uploader will be initialized to upload to the current Document Library folder, but users can change to another target folder right from within the uploader prior to uploading or between uploads, without having to navigate to that folder first via SharePoint. Untick this check box to never allow users to change the target folder..
        /// </summary>
        internal static string PD_UploadActions_cf {
            get {
                return ResourceManager.GetString("PD_UploadActions_cf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The uploader will be initialized to upload to the current Document Library, but users can change to another target Document Library right from within the uploader prior to uploading or between uploads, without having to navigate to that Document Library first via SharePoint. Untick this check box to never allow users to change the target Document Library..
        /// </summary>
        internal static string PD_UploadActions_cl {
            get {
                return ResourceManager.GetString("PD_UploadActions_cl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the menu item description / ribbon button tool-tip for this UploadZen &quot;Upload Multiple Files&quot; menu item..
        /// </summary>
        internal static string PD_UploadActions_desc {
            get {
                return ResourceManager.GetString("PD_UploadActions_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the preferred uploading client technology presented to your end users when this Upload Action is invoked.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Web&lt;/b&gt; mode is recommended for maximum compatibility &amp;mdash; if Silverlight plugin is installed, this mode may offer a file drop area and perform client-side zipping of uploaded files; if Silverlight or Flash plugin is installed, multiple files can be selected in a file browsing dialog at once.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Windows&lt;/b&gt; mode launches a native Windows application (ClickOnce / .NET Frame [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PD_UploadActions_m {
            get {
                return ResourceManager.GetString("PD_UploadActions_m", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to works mostly just with Windows clients and IE (legacy mode, least compatible).
        /// </summary>
        internal static string PD_UploadActions_m_c {
            get {
                return ResourceManager.GetString("PD_UploadActions_m_c", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to supports all client browsers and operating systems (recommended, highest compatibility).
        /// </summary>
        internal static string PD_UploadActions_m_h {
            get {
                return ResourceManager.GetString("PD_UploadActions_m_h", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only applies to Libraries that have check-out/check-in enabled. If this option is ticked, end users can select for each upload file whether and how to check it in, prior to the upload. The user interface for that selection will for all files default to the check-in option selected above..
        /// </summary>
        internal static string PD_UploadActions_nca {
            get {
                return ResourceManager.GetString("PD_UploadActions_nca", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only applies to Libraries that have check-out/check-in enabled. Select whether and how to automatically bulk check in uploaded files. Check-in will appear to have been done by the currently uploading user..
        /// </summary>
        internal static string PD_UploadActions_nci {
            get {
                return ResourceManager.GetString("PD_UploadActions_nci", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only applies to Libraries that have check-out/check-in enabled. Uploading files will always be checked out to the uploading user by design. To overwrite already existing files, these need to be checked out by UploadZen first; if you think you have to disable that default behaviour for some reason, untick this option to suppress automatic check-out of existing files prior to overwriting them..
        /// </summary>
        internal static string PD_UploadActions_nco {
            get {
                return ResourceManager.GetString("PD_UploadActions_nco", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To use this feature, you &lt;b&gt;NEED TO READ&lt;/b&gt; the &lt;i&gt;&quot;Preparing a Web Application for the Chunking feature&quot;&lt;/i&gt; section in the UploadZen Deployment Checklist help topic in additional to the following information.&lt;br/&gt;&lt;br/&gt;While we highly encourage you to increase your server-side request length and upload file size limits as well as request time-outs (as described in the UploadZen Deployment Checklist help topic), you can use this setting to allow uploads of files whose size exceeds your server-side limits b [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PD_UploadActions_ncs {
            get {
                return ResourceManager.GetString("PD_UploadActions_ncs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To restrict which types of files end users can upload via this Upload Action, select one or more file name extension filter sets. If end users then select files whose extensions do not match the selected filters, these files will not even be added to the Upload Files listing and consequently cannot be uploaded.&lt;br/&gt;&lt;br/&gt;With the newest Silverlight / Flash versions, these filters even permeate the file browsing dialog and will be offered as choices in there. As a result, users cannot even see or select file  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PD_UploadActions_nff {
            get {
                return ResourceManager.GetString("PD_UploadActions_nff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can optionally restrict the maximum size per file selected for upload. Files exceeding this limit will be automatically removed from the uploader file listing. Leave blank to allow files of any size.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Important:&lt;/b&gt; the format for this setting is 10B, 100KB, or 1000MB. So use any integer number (no fractional, floats or real numbers) and B for bytes, KB for kilobytes or MB for megabytes, no spaces or other non-numeric characters. (For GB use MB multiplied by 1024, ie. for 2GB use 2048MB inste [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PD_UploadActions_nms {
            get {
                return ResourceManager.GetString("PD_UploadActions_nms", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shows a link (for Windows clients with Internet Explorer) that launches the legacy Windows Uploader..
        /// </summary>
        internal static string PD_UploadActions_noc {
            get {
                return ResourceManager.GetString("PD_UploadActions_noc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If ticked, uploading files will overwrite any pre-existing files with the same name in the target Document Library folder (but the uploader will highlight existing files prior to the upload so users are notified and can choose to remove the file from the upload). If unticked, if a file with the same name exists in the target Document Library folder, the uploaded file will be rejected by SharePoint..
        /// </summary>
        internal static string PD_UploadActions_now {
            get {
                return ResourceManager.GetString("PD_UploadActions_now", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Web Uploader by default utilizes certain HTML5 features regarding file selection if the Web Browser used supports them, and only falls back to the specified plugins if not.
        ///
        ///The Web Uploader falls back to HTML4 (no selection of multiple-files in a single Browse File dialog) only if those plug-ins are not available either..
        /// </summary>
        internal static string PD_UploadActions_np {
            get {
                return ResourceManager.GetString("PD_UploadActions_np", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When users select files with name extensions that are &quot;blocked by the administrator&quot; (or by default) on the SharePoint server side (at the Web Application level [SPWebApplication.BlockedFileExtensions]), by default UploadZen will only warn about this (so users can remove the files from the listing) but will technically allow the upload, which SharePoint / IIS will however promptly refuse. Tick this option to have such files automatically removed from the listing when selected for upload, instead.&lt;br/&gt;&lt;br/&gt;&lt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PD_UploadActions_nrb {
            get {
                return ResourceManager.GetString("PD_UploadActions_nrb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify a character or text used to replace the unsupported characters ~ &quot; # % &amp; * : &lt; &gt; ? / \ { | } in uploaded file or folder names. To simply remove (rather than replace) these characters, fully clear this setting. The default value is the underscore (_). (Thanks to this feature, your end users will never receive SharePoint&apos;s &quot;The file name is invalid or the file is empty. A file name cannot contain any of the following characters...&quot; message.).
        /// </summary>
        internal static string PD_UploadActions_nrc {
            get {
                return ResourceManager.GetString("PD_UploadActions_nrc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;This setting is only used if you specify three integer numbers separated by [,] commas&lt;/b&gt;, no other characters. The first number is the maximum image width, the second number is the maximum image height, the third number is the image quality for additional file size compression (1 = worst, 100 = best). For example, if this setting is set to &lt;b&gt;320,240,90&lt;/b&gt; then all uploaded images will be resized pre-upload, aspect ratio maintained so that neither the maximum width nor the maximum height is exceeded..
        /// </summary>
        internal static string PD_UploadActions_nri {
            get {
                return ResourceManager.GetString("PD_UploadActions_nri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This allows users to add files to their upload by dragging them from their Explorer or Finder window onto the drop area..
        /// </summary>
        internal static string PD_UploadActions_nsd {
            get {
                return ResourceManager.GetString("PD_UploadActions_nsd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This allows users to define ZIPs to be uploaded in place of the corresponding files marked for zipping. The ZIPs will be generated on the fly just prior to their upload..
        /// </summary>
        internal static string PD_UploadActions_nsz {
            get {
                return ResourceManager.GetString("PD_UploadActions_nsz", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If ticked, this option will change the names of uploaded files to random, but unique sequences so that existing files will never be overwritten..
        /// </summary>
        internal static string PD_UploadActions_nun {
            get {
                return ResourceManager.GetString("PD_UploadActions_nun", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This allows users to select for each individual ZIP archive file marked for upload whether to keep the ZIP in the target Library as is, extract it in-place or extract it in a new sub-folder..
        /// </summary>
        internal static string PD_UploadActions_nuz {
            get {
                return ResourceManager.GetString("PD_UploadActions_nuz", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When clicking SharePoint&apos;s built-in, out-of-box &apos;Upload Document&apos; menu item (single-file upload), this always opens the Upload.aspx system page (which itself may or may not include another built-in, out-of-box &apos;Upload Multiple Documents&apos; link). Tick this check-box option to also offer this Upload Action on the Upload.aspx page. (Also requires activated &lt;a href=&quot;?cfg=wss&quot; target=&quot;_blank&quot;&gt;&quot;UploadZen Upload.aspx Replacement Page&quot; Site Collection feature&lt;/a&gt;.).
        /// </summary>
        internal static string PD_UploadActions_p {
            get {
                return ResourceManager.GetString("PD_UploadActions_p", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uploading users may be prompted to type their SharePoint user name and password in certain circumstances (see documentation), and can optionally elect to have UploadZen log them in automatically in the future. This will store their encrypted password in their Windows Registry &quot;Local User&quot; hive. Untick this check box to never let your UploadZen users store their password..
        /// </summary>
        internal static string PD_UploadActions_rp {
            get {
                return ResourceManager.GetString("PD_UploadActions_rp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Windows Uploader contains an &apos;Options&apos; tab that lets users review or customize certain user-specific client-side UploadZen settings (such as overwriting of existing files). Untick this check box to never show the Options tab to any users..
        /// </summary>
        internal static string PD_UploadActions_sc {
            get {
                return ResourceManager.GetString("PD_UploadActions_sc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The uploader shows a Help link in the bottom right corner pointing to select, end user-relevant documentation pages in this UploadZen Studio. Untick this check box to never show the Help link to your users..
        /// </summary>
        internal static string PD_UploadActions_sh {
            get {
                return ResourceManager.GetString("PD_UploadActions_sh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select in which Document Libraries this upload action will be offered as a menu item to end users (in the SharePoint 2007 &quot;Upload&quot; toolbar menu and in the SharePoint 2010/2013 &quot;Library Tools / Documents / New&quot; ribbon group)..
        /// </summary>
        internal static string PD_UploadActions_show {
            get {
                return ResourceManager.GetString("PD_UploadActions_show", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tick this check box for the uploader to show a link with a version number in the bottom right corner pointing to the UploadZen product web site..
        /// </summary>
        internal static string PD_UploadActions_sl {
            get {
                return ResourceManager.GetString("PD_UploadActions_sl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Web Uploader:&lt;/b&gt; The upload area displays a number of helpful hints whenever (and as long as) there are any files marked for upload.&lt;br/&gt;&lt;br/&gt;&lt;b&gt;Windows Uploader:&lt;/b&gt; The UploadZen window displays a helpful Welcome page with Quick-Start steps whenever (and as long as) there are no files or folders marked for upload.&lt;br/&gt;&lt;br/&gt;Untick this check box to never show the above Mini Tutorials to your users..
        /// </summary>
        internal static string PD_UploadActions_st {
            get {
                return ResourceManager.GetString("PD_UploadActions_st", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the menu item / ribbon button caption for this UploadZen &quot;Upload Multiple Files&quot; menu item..
        /// </summary>
        internal static string PD_UploadActions_title {
            get {
                return ResourceManager.GetString("PD_UploadActions_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UploadZen can just put an uploaded ZIP archive file into the current Document Library target folder as a single file, or extract all of its files and sub-folders in place..
        /// </summary>
        internal static string PD_UploadActions_uz {
            get {
                return ResourceManager.GetString("PD_UploadActions_uz", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target Library / Folder.
        /// </summary>
        internal static string PD_UploadWebPart_TargetFolder {
            get {
                return ResourceManager.GetString("PD_UploadWebPart_TargetFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get Target Library / Folder From.
        /// </summary>
        internal static string PD_UploadWebPart_TargetFolderGet {
            get {
                return ResourceManager.GetString("PD_UploadWebPart_TargetFolderGet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to name.
        /// </summary>
        internal static string PL_UploadActions_0 {
            get {
                return ResourceManager.GetString("PL_UploadActions_0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to sl.
        /// </summary>
        internal static string PL_UploadActions_2 {
            get {
                return ResourceManager.GetString("PL_UploadActions_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to m,nff,ncs,nri,nsz,nsd,nci,nca,sc,uz,rp,cf,cl.
        /// </summary>
        internal static string PL_UploadActions_4 {
            get {
                return ResourceManager.GetString("PL_UploadActions_4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to General.
        /// </summary>
        internal static string PT_UploadActions_a {
            get {
                return ResourceManager.GetString("PT_UploadActions_a", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User Interface.
        /// </summary>
        internal static string PT_UploadActions_i {
            get {
                return ResourceManager.GetString("PT_UploadActions_i", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Advanced.
        /// </summary>
        internal static string PT_UploadActions_m {
            get {
                return ResourceManager.GetString("PT_UploadActions_m", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Web Uploader.
        /// </summary>
        internal static string PT_UploadActions_n {
            get {
                return ResourceManager.GetString("PT_UploadActions_n", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Windows Uploader.
        /// </summary>
        internal static string PT_UploadActions_z {
            get {
                return ResourceManager.GetString("PT_UploadActions_z", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to and &lt;i&gt;Upload Actions&lt;/i&gt;.
        /// </summary>
        internal static string Tool_Transfer_Export_Extra {
            get {
                return ResourceManager.GetString("Tool_Transfer_Export_Extra", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upload Multiple Files.
        /// </summary>
        internal static string Tool_UploadActions_DefTitle {
            get {
                return ResourceManager.GetString("Tool_UploadActions_DefTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use this tool to define your UploadZen actions. Each upload action is bound to a specified set of Web Sites, Libraries and Views, specifies which client uploader to use and lets you customize various upload-specific options..
        /// </summary>
        internal static string Tool_UploadActions_Desc {
            get {
                return ResourceManager.GetString("Tool_UploadActions_Desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /_layouts/images/roxority_UploadZen/upload.png.
        /// </summary>
        internal static string Tool_UploadActions_Icon {
            get {
                return ResourceManager.GetString("Tool_UploadActions_Icon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upload Actions.
        /// </summary>
        internal static string Tool_UploadActions_Title {
            get {
                return ResourceManager.GetString("Tool_UploadActions_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upload Action.
        /// </summary>
        internal static string Tool_UploadActions_TitleSingular {
            get {
                return ResourceManager.GetString("Tool_UploadActions_TitleSingular", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Files....
        /// </summary>
        internal static string Uploader_AddFiles {
            get {
                return ResourceManager.GetString("Uploader_AddFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Files... (or drag and drop them here).
        /// </summary>
        internal static string Uploader_AddFilesDrop {
            get {
                return ResourceManager.GetString("Uploader_AddFilesDrop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Files with the following name extensions have been &quot;blocked by the administrator&quot; (or by default) on the SharePoint server side at the Web Application level:.
        /// </summary>
        internal static string Uploader_BlockInfo {
            get {
                return ResourceManager.GetString("Uploader_BlockInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel All.
        /// </summary>
        internal static string Uploader_Cancel {
            get {
                return ResourceManager.GetString("Uploader_Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check-in.
        /// </summary>
        internal static string Uploader_CheckIn {
            get {
                return ResourceManager.GetString("Uploader_CheckIn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No (keep checked out).
        /// </summary>
        internal static string Uploader_CheckIn0 {
            get {
                return ResourceManager.GetString("Uploader_CheckIn0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to As minor new version.
        /// </summary>
        internal static string Uploader_CheckIn1 {
            get {
                return ResourceManager.GetString("Uploader_CheckIn1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to As major new version.
        /// </summary>
        internal static string Uploader_CheckIn2 {
            get {
                return ResourceManager.GetString("Uploader_CheckIn2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overwrite current version.
        /// </summary>
        internal static string Uploader_CheckIn3 {
            get {
                return ResourceManager.GetString("Uploader_CheckIn3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File.
        /// </summary>
        internal static string Uploader_File {
            get {
                return ResourceManager.GetString("Uploader_File", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Due to technical limitations in the current Flash version, in order to retry a failed (or resume a cancelled) upload more than 2-3x in a row, UploadZen needs to reload this page and you need to re-select all files manually.
        ///
        ///We are sorry for the inconvenience and if this remains a persistent obstacle to your work flow, recommend that your administrator switches this Upload Action from Flash to Silverlight to overcome this temporary minor issue in the current release.
        ///
        ///This page will be reloaded as soon  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Uploader_FlashWarn {
            get {
                return ResourceManager.GetString("Uploader_FlashWarn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Help.
        /// </summary>
        internal static string Uploader_Help {
            get {
                return ResourceManager.GetString("Uploader_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Message(s) while uploading.
        /// </summary>
        internal static string Uploader_Messages {
            get {
                return ResourceManager.GetString("Uploader_Messages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No files marked for upload yet. Click &lt;b&gt;Add Files&lt;/b&gt; above to add files to this upload..
        /// </summary>
        internal static string Uploader_NoFiles {
            get {
                return ResourceManager.GetString("Uploader_NoFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Files with &lt;a href=&quot;#noop&quot; onclick=&quot;roxAlertBlockedInfo()&quot;&gt;blocked name extensions&lt;/a&gt; will be automatically removed from the above listing when selected..
        /// </summary>
        internal static string Uploader_NoteBlocked1 {
            get {
                return ResourceManager.GetString("Uploader_NoteBlocked1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Files with &lt;a href=&quot;#noop&quot; onclick=&quot;roxAlertBlockedInfo()&quot;&gt;blocked name extensions&lt;/a&gt; are &lt;span class=&quot;roxuphi2&quot;&gt;highlighted&lt;/span&gt; in the above listing and will be refused by SharePoint..
        /// </summary>
        internal static string Uploader_NoteBlocked2 {
            get {
                return ResourceManager.GetString("Uploader_NoteBlocked2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uploaded files will be &lt;b&gt;checked out&lt;/b&gt; to you. To check them in automatically after your upload, select so above..
        /// </summary>
        internal static string Uploader_NoteCheckout {
            get {
                return ResourceManager.GetString("Uploader_NoteCheckout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;Permitted file types:&lt;/b&gt; {0}.
        /// </summary>
        internal static string Uploader_NoteFilters {
            get {
                return ResourceManager.GetString("Uploader_NoteFilters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum permitted file size: &lt;b&gt;{0}&lt;/b&gt;.
        /// </summary>
        internal static string Uploader_NoteMaxSize {
            get {
                return ResourceManager.GetString("Uploader_NoteMaxSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Existing files with the same name will be &lt;b&gt;{0}&lt;/b&gt; as &lt;span class=&quot;roxuphi1&quot;&gt;highlighted&lt;/span&gt; in the above listing..
        /// </summary>
        internal static string Uploader_NoteOverwrite {
            get {
                return ResourceManager.GetString("Uploader_NoteOverwrite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to overwritten.
        /// </summary>
        internal static string Uploader_NoteOverwrite1 {
            get {
                return ResourceManager.GetString("Uploader_NoteOverwrite1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to refused.
        /// </summary>
        internal static string Uploader_NoteOverwrite2 {
            get {
                return ResourceManager.GetString("Uploader_NoteOverwrite2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of files per upload: &lt;b&gt;100+&lt;/b&gt; for IE with Silverlight, &lt;b&gt;max. 10-20&lt;/b&gt; for other browsers or with Flash (current plugin: &lt;b id=&quot;{0}_runtime&quot;&gt;none&lt;/b&gt;)..
        /// </summary>
        internal static string Uploader_NotePlugin {
            get {
                return ResourceManager.GetString("Uploader_NotePlugin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Image files that exceed &lt;b&gt;{0} &amp;times; {1} pixels&lt;/b&gt; will be resized accordingly..
        /// </summary>
        internal static string Uploader_NoteResize {
            get {
                return ResourceManager.GetString("Uploader_NoteResize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to After you have selected all files for this upload, click &lt;b&gt;Upload Files Now&lt;/b&gt; above to start uploading..
        /// </summary>
        internal static string Uploader_NoteUpload {
            get {
                return ResourceManager.GetString("Uploader_NoteUpload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This uploader requires .
        /// </summary>
        internal static string Uploader_Plugin1 {
            get {
                return ResourceManager.GetString("Uploader_Plugin1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;b&gt;either:&lt;/b&gt; .
        /// </summary>
        internal static string Uploader_Plugin2 {
            get {
                return ResourceManager.GetString("Uploader_Plugin2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , &lt;b&gt;or:&lt;/b&gt; .
        /// </summary>
        internal static string Uploader_Plugin3 {
            get {
                return ResourceManager.GetString("Uploader_Plugin3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to the Flash 10 browser plug-in (or newer).
        /// </summary>
        internal static string Uploader_PluginFlash {
            get {
                return ResourceManager.GetString("Uploader_PluginFlash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to the Silverlight 4 browser plug-in (or newer).
        /// </summary>
        internal static string Uploader_PluginSilver {
            get {
                return ResourceManager.GetString("Uploader_PluginSilver", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (&apos;{0}&apos; Root Folder).
        /// </summary>
        internal static string Uploader_RootFolder {
            get {
                return ResourceManager.GetString("Uploader_RootFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set all files to this selection.
        /// </summary>
        internal static string Uploader_SetAll {
            get {
                return ResourceManager.GetString("Uploader_SetAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set all ZIP files to this selection.
        /// </summary>
        internal static string Uploader_SetAllZip {
            get {
                return ResourceManager.GetString("Uploader_SetAllZip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Status.
        /// </summary>
        internal static string Uploader_Status {
            get {
                return ResourceManager.GetString("Uploader_Status", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancelled.
        /// </summary>
        internal static string Uploader_StatusCancel {
            get {
                return ResourceManager.GetString("Uploader_StatusCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Success.
        /// </summary>
        internal static string Uploader_StatusDone {
            get {
                return ResourceManager.GetString("Uploader_StatusDone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed.
        /// </summary>
        internal static string Uploader_StatusFail {
            get {
                return ResourceManager.GetString("Uploader_StatusFail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (No file selected.).
        /// </summary>
        internal static string Uploader_StatusNone {
            get {
                return ResourceManager.GetString("Uploader_StatusNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not yet uploaded.
        /// </summary>
        internal static string Uploader_StatusQueue {
            get {
                return ResourceManager.GetString("Uploader_StatusQueue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upload &lt;span id=&quot;{0}_count&quot;&gt;0&lt;/span&gt; File(s) Now.
        /// </summary>
        internal static string Uploader_Upload {
            get {
                return ResourceManager.GetString("Uploader_Upload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upload Files to.
        /// </summary>
        internal static string Uploader_UploadTo {
            get {
                return ResourceManager.GetString("Uploader_UploadTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ...or try the Windows-based uploader.
        /// </summary>
        internal static string Uploader_Windows {
            get {
                return ResourceManager.GetString("Uploader_Windows", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upload (don&amp;#39;t extract).
        /// </summary>
        internal static string Uploader_ZipExtract0 {
            get {
                return ResourceManager.GetString("Uploader_ZipExtract0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extract in this folder.
        /// </summary>
        internal static string Uploader_ZipExtract1 {
            get {
                return ResourceManager.GetString("Uploader_ZipExtract1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extract in new sub-folder.
        /// </summary>
        internal static string Uploader_ZipExtract2 {
            get {
                return ResourceManager.GetString("Uploader_ZipExtract2", resourceCulture);
            }
        }
    }
}
